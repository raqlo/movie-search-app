{"version":3,"sources":["components/MovieItem.jsx","components/MovieList.jsx","components/SearchMovies.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieItem","movie","console","log","className","src","poster_path","alt","title","MovieList","movies","filter","map","id","SearchMovies","useState","query","setQuery","setMovies","searchMovies","e","a","preventDefault","url","fetch","getData","json","resData","results","error","action","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAkBeA,MAhBf,YAA+B,IAAVC,EAAS,EAATA,MAEnB,OADAC,QAAQC,IAAIF,GAEV,gCACE,qBAAKG,UAAU,OAAf,SACE,qBACEA,UAAU,6CACVC,IAAG,0DAAqDJ,EAAMK,aAC9DC,IAAG,UAAKN,EAAMO,MAAX,eAGP,oBAAIJ,UAAU,UAAd,SAAyBH,EAAMO,YCEtBC,MAZf,YAAgC,IAAXC,EAAU,EAAVA,OACnB,OACE,qBAAKN,UAAU,sBAAf,SACGM,EACEC,QAAO,SAACV,GAAD,OAAWA,EAAMK,eACxBM,KAAI,SAACX,GAAD,OACH,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,UCsCjBC,MA5Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOL,EAAP,KAAeQ,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBACFpB,QAAQC,IAAI,cACNoB,EAHa,kHAGoGP,EAHpG,iDAMKQ,MAAMD,GANX,cAMXE,EANW,gBAOKA,EAAQC,OAPb,OAOXC,EAPW,OASjBT,EAAUS,EAAQC,SATD,kDAWjB1B,QAAQ2B,MAAR,MAXiB,0DAAH,sDAelB,OACE,gCACE,uBACEC,OAAO,GACPC,SAAUZ,EACVf,UAAU,yBAHZ,UAKE,uBAAO4B,QAAQ,QAAf,wBACA,uBACE5B,UAAU,SACV6B,KAAK,OACLC,KAAK,QACLC,YAAY,qBACZC,MAAOpB,EACPqB,SAAU,SAACjB,GAAD,OAAOH,EAASG,EAAEkB,OAAOF,UAErC,wBAAQH,KAAK,SAAb,uBAEF,qBAAK7B,UAAU,oBAAf,SACE,cAAC,EAAD,CAAWM,OAAQA,UC7BZ6B,MATf,WACE,OACE,sBAAKnC,UAAU,sBAAf,UACE,oBAAIA,UAAU,0BAAd,gCACA,cAAC,EAAD,QCKSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d40c2e6e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction MovieItem({ movie }) {\n  console.log(movie);\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <img\n          className=\"full-width rounded-lg overflow-hidden mb-2\"\n          src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n      </div>\n      <h3 className=\"text-xl\">{movie.title}</h3>\n    </div>\n  );\n}\n\nexport default MovieItem;\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\n\nfunction MovieList({ movies }) {\n  return (\n    <div className=\"grid md:grid-cols-3\">\n      {movies\n        .filter((movie) => movie.poster_path)\n        .map((movie) => (\n          <MovieItem key={movie.id} movie={movie} />\n        ))}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import React, { useState } from \"react\";\nimport MovieList from \"./MovieList\";\n\nfunction SearchMovies() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (e) => {\n    e.preventDefault();\n    console.log(\"submitting\");\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=5e95afb6d62389c2b5dd62b829fb1d75&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const getData = await fetch(url);\n      const resData = await getData.json();\n\n      setMovies(resData.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <form\n        action=\"\"\n        onSubmit={searchMovies}\n        className=\"grid grid-cols-3 gap-1\"\n      >\n        <label htmlFor=\"query\">Movie name</label>\n        <input\n          className=\"border\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic park\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div className=\"container mx-auto\">\n        <MovieList movies={movies} />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchMovies;\n","import React from \"react\";\nimport SearchMovies from \"./components/SearchMovies\";\n\nfunction App() {\n  return (\n    <div className=\"max-w-prose mx-auto\">\n      <h1 className=\"text-5xl font-bold mb-8\">React Movie Search</h1>\n      <SearchMovies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}